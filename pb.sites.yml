---
- name: Get list of NetBox sites
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Test
      command: >
        chmod +x ./scripts/get_netbox_paths.py
      
    - name: Run the Python script to retrieve the paths
      command: >
        python3 ./scripts/get_netbox_paths.py
        --url {{ netbox_url }}
        --token {{ netbox_token }}
      args:
        chdir: "{{ playbook_dir }}"
      changed_when: false
    
    - name: Load paths from JSON file
      set_fact:
        netbox_paths: "{{ lookup('file', './data/netbox_paths.json') | from_json }}"

    - name: Retrieve existing sites from XIQ-SE
      tchevalleraud.extremenetworks_xiqse.xiqse_sites:
        provider:
          host: "{{ xiqse_host }}"
          client_id: "{{ xiqse_client }}"
          client_secret: "{{ xiqse_secret }}"
          verify: "false"
      register: result
    
    - name: Extract existing site paths
      set_fact:
        existing_site_paths: "{{ result.sites | map(attribute='location') | list }}"
    
    - name: Create missing sites
      tchevalleraud.extremenetworks_xiqse.xiqse_site:
        site_path: "{{ item.path }}"
        state: present
        provider:
          host: "{{ xiqse_host }}"
          client_id: "{{ xiqse_client }}"
          client_secret: "{{ xiqse_secret }}"
          verify: "{{ xiqse_verify }}"
      loop: "{{ netbox_paths }}"
      when: item.path not in existing_site_paths
    
    - name: Delete extra sites
      tchevalleraud.extremenetworks_xiqse.xiqse_site:
        site_path: "{{ item.location }}"
        state: absent
        provider:
          host: "{{ xiqse_host }}"
          client_id: "{{ xiqse_client }}"
          client_secret: "{{ xiqse_secret }}"
          verify: "{{ xiqse_verify }}"
      loop: "{{ result.sites }}"
      when:
        - item.location not in (sites | map(attribute='name') | list)
        - item.location != "/World"